1. List
2. string
3. Отличия изменяемых и неизменяемых типов данных в Python


02.12
1) Области видимости
2) Вложенные функции
3) Рекурсия

Что такое изменяемые и неизменяемые типы данных?

03.12
1) Совместное решение задач, посвященных рекурсии
2) Практическая работа с рекурсией

09.12
1) Решение практических задач прошлого урока
2) Исключения в Python, способы работы с ними
try/except блоки

10.12
1) Кортежи (Tuple)
2) Set (множества)
3) Dictionary (словари)

23.12
1) Продолжим изучать работу с файлами
2) Менеджер контеста
3) Утечки памяти при работе с файлами
4) Примеры использования

13.02
1) Экзаменационная работа
2) Многопоточность
3) Асинхронность
4) Pydatic

20.02
1) Декоратор
2) Наблюдатель

24.02
1) Повторить все выученные паттерны
2) Архитектурный стиль Model-View-Controller (MVC)
3) Практическая работа

Паттерны проектирования: https://refactoring.guru/ru


25.02
1) Повторение материала

1) Как объявить переменную в Python
2) Как в Python обозначаются однострочные и многострочные комментарии
Многострочне - три кавычки
3) Какие основные типы данных вы знаете? I - неизменяемый, M - изменяемый
int (I), float (I), bool (I), str (I), set (M), dict (M), list (M), tuple (I)
4) Чем отличается == и is
== сравнивает по значению, is сравнивает по ссылке
5) Как создать неизменяемый список?
Использовать tuple
6) Как удалить элемент из списка
lst.remove() - удаления значения-аргумента
lst.pop() - последний элемент
del list[index] - удаление определнного индекса
7) Какая структура данных хранит только уникальные значения?
set
8) Как создать словарь с начальными значениями?
my_dict = {"a": "b"}
my_dict = dict(a="b")
9) Как объединить два словаря?
метод update() либо создание нового словаря через **
10) Какие циклы есть в python
for и while
11) Как прервать выполнение цикла
break
12) В чем отличие continue и pass
13) Как создать тернарный оператор в python? (однострочный if)
x = a if a > 1 else b
14) Как определить функцию в python
def
15) Как сделать аргумент в функции необязательным?
Задать для аргумента значение по умолчанию
16) Чем *args отличается от **kwargs?
args - позиционные аргументы
kwargs - аргументы по ключевым словам
17) Как определить анонимную функцию?
lambda
18) Как определить класс в python?
ключевое слово class
19) Как создать экземпляр класса?
Вызвать класс при помощи скобок
20) Как реализовать наследование?
При определении класса указать родительский класс в скобках после названия
класса
21) Как Python реализовывает множественное наследование
22) Как обрабатывать исключения?
try/except/finally
23) Как вызвать исключения вручную?
raise
24) Что делает finally?
исполняется в любом случае
25) Как открыть файл для чтения?
open(<название файла>, <метод открытия>)
26) Как записать данные в файл?
метод write()
27) Как вызваьть родительский метод в дочернем классе?
super().<название метода>
28) Как запреттить создание экземпляров класса?
Наследоваться от ABC
29) Что произойдет если определить метод __call__ в классе?
метод __call__ позволяет нам вызывать объекты как функции
30) Как вернуть несколько значений из функции?
31) Что произойдет если изменить изменяемый аргумент в функции?
Изменения сохранятся после выхода из функции
32) Как объединить два списка без дубликатов?
Использовать set()
33) Как я могу получить значение словаря без ошибки если я не уверен,
что искомый ключ существует
Использовать метод .get()
34) Как избежать выполнения кода при импорте модуля?
if __name__ == "__main__":
35) Как записать словарь в python в .json файл?
Используя библиотеку json
36) Декораторы

27.02
1) Создадим приложение на основе tkinter
2) Итеративное улучшение приложения
